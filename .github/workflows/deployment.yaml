name: Build, Upload and Deploy

on:
    push:
        branches:
            - CI/CD
    pull_request:

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: [3.8]
        # node-version: ['12.x']
        # appname: ['aws-codedeploy']
        # deploy-group: ['staging']
        s3-bucket: ['ferrum-pipeline-artifacts']
        s3-filename: ['staging-aws-codedeploy-${{ github.sha }}']
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: sheraz-test-repo-gateway-backend
        IMAGE_TAG: latest
      run: |
        ls
        # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: AWS Deploy push
      run: |
        ls -la
        pwd
        aws deploy push \
          --application-name ${{ secrets.APPLICATION_NAME }}  \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .
          # --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          # --ignore-hidden-files \



  Deploy:
    needs: [Build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: [3.8]
        # node-version: ['12.x']
        # appname: ['aws-codedeploy']
        # deploy-group: ['staging']
        s3-bucket: ['ferrum-pipeline-artifacts']
        s3-filename: ['staging-aws-codedeploy-${{ github.sha }}']
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2


    - name: CodeDeploy Deployment
      id: deploy
      run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.APPLICATION_NAME }} \
          --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP }} \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip
          # --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

